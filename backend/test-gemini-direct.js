// Test Gemini API directly to verify it's working

require('dotenv').config();
const { GoogleGenerativeAI } = require('@google/generative-ai');
const improvedGeminiService = require('./services/improvedGeminiService');

async function testGeminiDirect() {
  console.log('ü§ñ TESTING GEMINI API DIRECTLY');
  console.log('='*50);
  
  const apiKey = process.env.GEMINI_API_KEY;
  console.log('API Key:', apiKey ? `${apiKey.substring(0, 10)}...` : 'Not found');
  
  if (!apiKey) {
    console.log('No API key found');
    return;
  }

  const skills = ['Mobile Development', 'Data Science'];
  
  for (const skill of skills) {
    console.log(`\nüì± Testing Gemini for: ${skill}`);
    console.log('-'*30);
    
    try {
      const genAI = new GoogleGenerativeAI(apiKey);
      const modelNames = ['gemini-pro', 'gemini-1.5-flash', 'gemini-1.5-pro'];
      for (const modelName of modelNames) {
        const result = await genAI.generateAnalytics(skill, 'India');
        
        if (result.success) {
          console.log(`‚úÖ ${skill} - Generated by: ${result.generatedBy}`);
          console.log(`   Skill: ${result.data.skill}`);
          console.log(`   Salary: ${result.data.marketOverview?.averageSalary}`);
          console.log(`   Growth: ${result.data.marketOverview?.growthRate}`);
          console.log(`   Job Openings: ${result.data.marketOverview?.jobOpenings}`);
          
          // Check if it's from Gemini or fallback
          if (result.generatedBy === 'Gemini AI') {
            console.log('üéâ SUCCESS: Using real Gemini AI data!');
          } else {
            console.log('‚ö†Ô∏è WARNING: Using fallback data, not Gemini AI');
          }
        } else {
          console.log(`‚ùå ${skill} - Generation failed`);
        }
      } else {
        console.log(`‚ùå ${skill} - Generation failed`);
      }
    } catch (error) {
      console.error(`‚ùå ${skill} - Error:`, error.message);
    }
  }
  
  console.log('\n' + '='*50);
  console.log('üîç DIAGNOSIS:');
  console.log('If you see "Enhanced Fallback System" instead of "Gemini AI",');
  console.log('then the system is not using real Gemini data.');
  console.log('Check your GEMINI_API_KEY in the .env file.');
}

testGeminiDirect().catch(console.error);
