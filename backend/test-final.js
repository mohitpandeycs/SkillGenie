const improvedGeminiService = require('./services/improvedGeminiService');

async function testFinalSystem() {
  console.log('üéØ FINAL SYSTEM TEST - GEMINI API INTEGRATION');
  console.log('='*60);
  
  const testSkills = ['Mobile Development', 'Data Science', 'React', 'Python', 'Machine Learning'];
  
  for (const skill of testSkills) {
    console.log(`\nüì± TESTING: ${skill.toUpperCase()}`);
    console.log('-'*40);
    
    try {
      // Test Roadmap Generation
      console.log('1. Testing roadmap generation...');
      const roadmap = await improvedGeminiService.generateRoadmap(skill, 'beginner');
      
      if (roadmap.success) {
        console.log(`‚úÖ Roadmap: "${roadmap.data.title}"`);
        console.log(`   Generated by: ${roadmap.generatedBy}`);
        console.log(`   Chapters: ${roadmap.data.chapters.length}`);
        console.log(`   First chapter: "${roadmap.data.chapters[0]?.title}"`);
        console.log(`   Salary range: ${roadmap.data.estimatedSalaryRange}`);
      } else {
        console.log('‚ùå Roadmap generation failed');
      }
      
      // Test Analytics Generation
      console.log('2. Testing analytics generation...');
      const analytics = await improvedGeminiService.generateAnalytics(skill, 'USA');
      
      if (analytics.success) {
        console.log(`‚úÖ Analytics: ${analytics.data.marketOverview.demandLevel} demand`);
        console.log(`   Generated by: ${analytics.generatedBy}`);
        console.log(`   Avg salary: ${analytics.data.marketOverview.averageSalary}`);
        console.log(`   Job openings: ${analytics.data.marketOverview.jobOpenings}`);
      } else {
        console.log('‚ùå Analytics generation failed');
      }
      
      // Test Chat Mentor
      console.log('3. Testing AI chat mentor...');
      const chatResponse = await improvedGeminiService.chatMentor(
        `I'm learning ${skill} and need guidance on getting started`,
        { skill, currentChapter: 'Fundamentals', quizScore: 80, roadmapProgress: 25 }
      );
      
      if (chatResponse.success) {
        console.log(`‚úÖ Chat: "${chatResponse.message.substring(0, 80)}..."`);
      } else {
        console.log('‚ùå Chat mentor failed');
      }
      
    } catch (error) {
      console.log(`‚ùå Error testing ${skill}:`, error.message);
    }
    
    console.log('-'*40);
  }
  
  console.log('\nüåê TESTING API ENDPOINTS...');
  console.log('='*40);
  
  try {
    // Test API endpoints
    const testAPI = async (endpoint, method = 'GET', body = null) => {
      const options = { method, headers: { 'Content-Type': 'application/json' } };
      if (body) options.body = JSON.stringify(body);
      
      const response = await fetch(`http://localhost:5000${endpoint}`, options);
      const data = await response.json();
      
      console.log(`${response.ok ? '‚úÖ' : '‚ùå'} ${method} ${endpoint}`);
      if (response.ok && data.success) {
        console.log(`   Generated by: ${data.generatedBy || 'Unknown'}`);
        if (data.data?.title) console.log(`   Title: ${data.data.title}`);
        if (data.data?.skill) console.log(`   Skill: ${data.data.skill}`);
      }
      
      return response.ok;
    };
    
    // Test different skills
    await testAPI('/api/roadmaps/generate/dynamic', 'POST', {
      skill: 'Flutter Development',
      level: 'intermediate'
    });
    
    await testAPI('/api/analytics/market/dynamic?skill=Cybersecurity&location=Canada');
    
    await testAPI('/api/ai-mentor/chat', 'POST', {
      message: 'How do I become a full-stack developer?',
      context: { skill: 'Web Development', level: 'beginner' }
    });
    
  } catch (error) {
    console.log('‚ùå API test failed:', error.message);
  }
  
  console.log('\nüéâ FINAL TEST COMPLETE!');
  console.log('='*60);
  console.log('‚ú® The system is now ready with:');
  console.log('   - Gemini AI integration (with smart fallbacks)');
  console.log('   - Unique roadmaps for each skill');
  console.log('   - Dynamic analytics generation');
  console.log('   - AI-powered chat mentor');
  console.log('   - Enhanced error handling');
  console.log('   - Skill-specific content generation');
  console.log('\nüöÄ Visit http://localhost:3000/dynamic-roadmap to test!');
}

testFinalSystem().catch(console.error);
